from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from crypto_scrape_win import check_case_dir_exists, fetch_wallets_win

class Ui_UserInput(object):

    def on_click_confirm(self):
        TextExaminerValue = self.TextExaminer.text()
        TextCaseValue = self.TextCase.text()
        TextExhibitValue = self.TextExhibit.text()
        TextDescriptionValue = self.TextDescription.text()

        if (TextExaminerValue == '' or 
        TextCaseValue == '' or 
        TextExhibitValue == '' or  
        TextDescriptionValue == ''):
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Warning)
            msg.setText("Error please fill in all required boxes!")
            msg.setWindowTitle("Error!")
            msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
            retval = msg.exec_()
        else:
            try:
                check_case_dir_exists(TextExaminerValue, TextCaseValue, TextExhibitValue, TextDescriptionValue)
                self.TextExaminer.setEnabled(False)
                self.TextCase.setEnabled(False)
                self.TextDescription.setEnabled(False)
                self.TextExhibit.setEnabled(False)
                self.ButtonConfirm.setEnabled(False)
                self.ButtonScan.setEnabled(True)
            except FileExistsError:
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setText("Error creating %s %s %s %s case already exists!" % (TextExaminerValue, TextCaseValue, TextExhibitValue, TextDescriptionValue))
                msg.setWindowTitle("Error!")
                msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
                retval = msg.exec_()
            except OSError:
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setText("Error creating %s %s %s %s please do not use punctuation!" % (TextExaminerValue, TextCaseValue, TextExhibitValue, TextDescriptionValue))
                msg.setWindowTitle("Error!")
                msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
                retval = msg.exec_()
            except FileNotFoundError:
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setText("Error creating %s %s %s %s please do not use punctuation!" % (TextExaminerValue, TextCaseValue, TextExhibitValue, TextDescriptionValue))
                msg.setWindowTitle("Error!")
                msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
                retval = msg.exec_()

    def on_click_scan(self):
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Information)
        msg.setText("System scan started! Please do not click on Crypto Scrape until the program is complete!")
        msg.setWindowTitle("System scan complete!")
        msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
        retval = msg.exec_()
        self.ButtonScan.setEnabled(False)
        fetch_wallets_win(self.TextExaminer.text(), self.TextCase.text(), self.TextExhibit.text(), self.TextDescription.text())
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Information)
        msg.setText("System scan complete! Copied all potential wallet files to %s %s %s %s case folder! In order to decrypt wallets you must load this case file onto the crypto scrape server." % (self.TextExaminer.text(), self.TextCase.text(), self.TextExhibit.text(), self.TextDescription.text()))
        msg.setWindowTitle("System scan complete!")
        msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
        retval = msg.exec_()
        

    def setupUi(self, UserInput):
        UserInput.setObjectName("UserInput")
        UserInput.resize(500, 270)
        UserInput.setMinimumSize(QtCore.QSize(500, 270))
        UserInput.setMaximumSize(QtCore.QSize(500, 315))
        self.centralwidget = QtWidgets.QWidget(UserInput)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 91, 31))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.LabelExaminer = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.LabelExaminer.setObjectName("LabelExaminer")
        self.verticalLayout.addWidget(self.LabelExaminer)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(100, 10, 381, 31))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.TextExaminer = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.TextExaminer.setObjectName("TextExaminer")
        self.verticalLayout_2.addWidget(self.TextExaminer)
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(10, 40, 91, 31))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.LabelCase = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.LabelCase.setObjectName("LabelCase")
        self.verticalLayout_3.addWidget(self.LabelCase)
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(100, 40, 381, 31))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.TextCase = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.TextCase.setObjectName("TextCase")
        self.verticalLayout_4.addWidget(self.TextCase)
        self.verticalLayoutWidget_5 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_5.setGeometry(QtCore.QRect(10, 70, 91, 31))
        self.verticalLayoutWidget_5.setObjectName("verticalLayoutWidget_5")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_5)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.LabelCase_2 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.LabelCase_2.setObjectName("LabelCase_2")
        self.verticalLayout_5.addWidget(self.LabelCase_2)
        self.verticalLayoutWidget_6 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_6.setGeometry(QtCore.QRect(100, 70, 381, 31))
        self.verticalLayoutWidget_6.setObjectName("verticalLayoutWidget_6")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_6)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.TextExhibit = QtWidgets.QLineEdit(self.verticalLayoutWidget_6)
        self.TextExhibit.setObjectName("TextExhibit")
        self.verticalLayout_6.addWidget(self.TextExhibit)
        self.verticalLayoutWidget_7 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_7.setGeometry(QtCore.QRect(10, 100, 91, 31))
        self.verticalLayoutWidget_7.setObjectName("verticalLayoutWidget_7")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_7)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.LabelCase_3 = QtWidgets.QLabel(self.verticalLayoutWidget_7)
        self.LabelCase_3.setObjectName("LabelCase_3")
        self.verticalLayout_7.addWidget(self.LabelCase_3)
        self.verticalLayoutWidget_8 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_8.setGeometry(QtCore.QRect(100, 100, 381, 31))
        self.verticalLayoutWidget_8.setObjectName("verticalLayoutWidget_8")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_8)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.TextDescription = QtWidgets.QLineEdit(self.verticalLayoutWidget_8)
        self.TextDescription.setObjectName("TextDescription")
        self.verticalLayout_8.addWidget(self.TextDescription)
        self.verticalLayoutWidget_10 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_10.setGeometry(QtCore.QRect(10, 190, 471, 41))
        self.verticalLayoutWidget_10.setObjectName("verticalLayoutWidget_10")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_10)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.ButtonScan = QtWidgets.QPushButton(self.verticalLayoutWidget_10)
        self.ButtonScan.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ButtonScan.sizePolicy().hasHeightForWidth())
        self.ButtonScan.setSizePolicy(sizePolicy)
        self.ButtonScan.setObjectName("ButtonScan")
        self.verticalLayout_10.addWidget(self.ButtonScan)
        self.verticalLayoutWidget_11 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_11.setGeometry(QtCore.QRect(10, 140, 471, 41))
        self.verticalLayoutWidget_11.setObjectName("verticalLayoutWidget_11")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_11)
        self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.ButtonConfirm = QtWidgets.QPushButton(self.verticalLayoutWidget_11)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ButtonConfirm.sizePolicy().hasHeightForWidth())
        self.ButtonConfirm.setSizePolicy(sizePolicy)
        self.ButtonConfirm.setObjectName("ButtonConfirm")
        self.verticalLayout_11.addWidget(self.ButtonConfirm)
        UserInput.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(UserInput)
        self.statusbar.setObjectName("statusbar")
        UserInput.setStatusBar(self.statusbar)


        self.ButtonConfirm.clicked.connect(self.on_click_confirm)
        self.ButtonScan.clicked.connect(self.on_click_scan)

        self.retranslateUi(UserInput)
        QtCore.QMetaObject.connectSlotsByName(UserInput)

    def retranslateUi(self, UserInput):
        _translate = QtCore.QCoreApplication.translate
        UserInput.setWindowTitle(_translate("UserInput", "Crypto scrape Triage"))
        self.LabelExaminer.setText(_translate("UserInput", "Examiner name:"))
        self.LabelCase.setText(_translate("UserInput", "Case reference:"))
        self.LabelCase_2.setText(_translate("UserInput", "Exhibit reference:"))
        self.LabelCase_3.setText(_translate("UserInput", "Description:"))
        self.ButtonScan.setText(_translate("UserInput", "Scan system"))
        self.ButtonConfirm.setText(_translate("UserInput", "Confirm"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    UserInput = QtWidgets.QMainWindow()
    ui = Ui_UserInput()
    ui.setupUi(UserInput)
    UserInput.show()
    sys.exit(app.exec_())
